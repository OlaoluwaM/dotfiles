% shell, command-line

# Mass search and replace
grep --exclude-dir={<dirs_to_exclude>} -rl <target_dir> -e "<search_query>" | xargs -I _ sed -i 's/<search_query>/<replace_with>/g' _

# Fix network problems caused by proton-vpn killswitch artifacts
nmcli con | grep <dummy-network-interface> | awk '{print $2}' | xargs -I _ nmcli con delete uuid _

# Find all running node process
ps -aef | grep node

# Get kernel version
uname -r

# Add README template to open source project
downloadFile https://gist.githubusercontent.com/OlaoluwaM/baa27f06abe2a209695e2bc3a6757c05/raw/228fc9d48ed33bc8d5eb58d265df40323f7fc61e/README-Fancy.md README.md

# List the files in a tarball
tar -tf

# Count all files in a directory
ls -Rp | grep -v / | sed -r '/^\s*$/d' | tail -n +2 | wc -l

# Get my IP address
ifconfig | sed -En "s/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p"

# List all installed Python version
ls -ls /usr/bin/python*

# Remove .gitkeep files from directory
find . -name '.gitkeep' -delete

# Find duplicates in PATH variable
echo $PATH | tr ':' '\n' | sort | uniq -d

# Remove remaining sudo privileges from password timeout (https://askubuntu.com/a/14949)
sudo -k

# Check if sudo privileges have timed out (https://unix.stackexchange.com/questions/330690/how-do-i-find-out-if-my-sudoer-privilege-timed-out)
sudo -nv

# Uninstall node version from NVM
nvm uninstall <node-version>

# Check what will be included in published npm package
npx npm-packlist

# Get password for currently connected WIFI
sudo nmcli d wifi show

# Update npm to latest
npm install -g npm@latest

# Change the TTL of the packets sent via ping
ping -t <ttl_val> <destination_address>

# Get RAM info
sudo dmidecode --type 17

# Get Abridged RAM info
sudo lshw -short -C memory

# Reload gpg-agent
gpg-connect-agent reloadagent /bye

# TCP Dump verbose using IP & MAC adddresses, for a specific protocol
sudo tcpdump -nvi <network_interfaces> <network_protocol>

# Check all the processes listening on a specific port with a given network protocol
lsof -i <network_protocol>:<port_number>

# Find all processes listening on a specific port
lsof -i :<port_number>

# Do a dns lookup (resolve host name to IP address)
dig +short <host_name_to_lookup>

# Do a reverse dns lookup (resolve IP address to host name)
dig -x <ip_address>

# Check if a TCP connection exists, that is, check if a host can be reached (using a host name)
nc -zv <host_name_to_lookup> <port_number>

# Check if a TCP connection exists, that is, check if a host can be reached (using an IP name)
nc -zv <ip_address> <port_number>

# Get IP info for all network interfaces
ifconfig

# Get System info
sudo dmidecode -t1

# Get BIOS info
sudo dmidecode -t0

# Get udev logs or something
sudo journalctl -f

# Launch application with dGPU from terminal with switcherooctl
switcherooctl launch --gpu=1 <application_name>

# Search multiple files for a word in BASH (https://stackoverflow.com/questions/16956810/how-to-find-all-files-containing-specific-text-string-on-linux)
grep --exclude-dir={<dirs_to_exclude1>,<dir_to_exclude>,<glob_of_dir_to_exclude>} -rnw '/path/to/somewhere/' -e "pattern"

# Print out without paging
less -F

# Get binary/exeutable-file architecture info
file -e elf <executable_file>

# Copy directory contents only
rsync -a --progress --stats <source_dir> <destination_dir>

# Run command in the background
nohup <command> &

# Repeat command N times (https://stackoverflow.com/questions/3737740/is-there-a-better-way-to-run-a-command-n-times-in-bash)
for i in {1..<n>}; do <command_to_run>; done

$ dummy-network-interface: nmcli con | awk '{print $1}' | tail -n +2
$ dir-to-search: echo -e '.\n'
$ package-name: snap list
$ network_interfaces: nmcli con | awk '{print $4}' | head --lines -4 | tail --lines +2
$ network_protocol: echo 'arp ip icmp tcp udp' | tr ' ' '\n'
